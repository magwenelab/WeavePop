# =================================================================================================
#   Check minimal version
# =================================================================================================

from snakemake.utils import min_version
min_version("8.2.1")

# =================================================================================================
#   Setup config file
# =================================================================================================

configfile: "config/config.yaml"

# =================================================================================================
#   Load rules
# =================================================================================================

if config["sample_workflow"] and not config["join_datasets_workflow"]:
    include: "rules/common.smk"
    include: "rules/main.smk"
    include: "rules/depth.smk"
    include: "rules/snpeff_db.smk"
    include: "rules/snps.smk"

    if config["annotate_references"]["activate"]:
        include: "rules/references.smk"

    if not config["annotate_references"]["activate"]:
        include: "rules/lineage_gffs.smk"

    if config["plotting"]["activate"] and config["annotate_references"]["activate"]:
        include: "rules/unmapped_main_ref.smk"

    if config["plotting"]["activate"] and not config["annotate_references"]["activate"]:
        include: "rules/unmapped_per_lineage.smk"

    if config["plotting"]["activate"]:
        include: "rules/plots.smk"

    if config["database"]["activate"]:
        include: "rules/database.smk"
        if config["plotting"]["activate"]:
            include: "rules/dataset_plots.smk"
elif config["join_datasets_workflow"] and not config["sample_workflow"]:
    include: "rules/join_results.smk"
    include: "rules/snps.smk"
    include: "rules/dataset_plots.smk"
    include: "rules/database.smk"
elif config["join_datasets_workflow"] and config["sample_workflow"]:
    raise ValueError("Both workflows cannot be activated at the same time.")
else: 
    raise ValueError("No workflow activated.")

# =================================================================================================
#   Define final output
# =================================================================================================

rule all:
    input:
        get_final_output()
